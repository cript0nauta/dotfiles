" Definir los plugins acá {{{
"
" Better file browser: nerdtree {{{
let NERDTreeIgnore = ['\.pyc$', '\.pyo$']
" }}}

" }}}



" Opciones del editor {{{

" allow plugins by file type (required for plugins!) {{{
filetype plugin on
" }}}
" tabs and spaces handling {{{
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
" }}}

" Sin esta línea el backspace anda muy mal en nixos
" Es el default en el vimrc estándar
set backspace=indent,eol,start
set encoding=utf-8

" always show status bar {{{
set ls=2
" }}}
" Mostrar resultados de búsqueda a medida que se introduce el patrón {{{
set incsearch
" }}}
" syntax highlight on {{{
syntax on
" }}}
" show line numbers {{{
set number
" }}}
" mostrar números de línea relativos a la posición del cursor {{{
set relativenumber
" }}}
" when scrolling, keep cursor 3 lines away from screen border {{{
set scrolloff=3
" }}}
" Habilitar uso del mouse  {{{
set mouse=a
set ttymouse=sgr  " Para que funcione el scroll con st
" }}}
" autocompletion of files and commands behaves like shell {{{
" (complete only the common part, list the options that match)
" TODO: chequar alternativas
set wildmode=list:longest 
" }}}
" better backup, swap and undos storage {{{
set directory=~/.vim/dirs/tmp     " directory to place swap files in
set backup                        " make backup files
set backupdir=~/.vim/dirs/backups " where to put backup files
set undofile                      " persistent undos - undo after you re-open the file
set undodir=~/.vim/dirs/undos
"set viminfo+=n~/.vim/dirs/viminfo
set viminfo='100,<50,s10,h,n~/.vim/dirs/viminfo
" }}}
" Tamaño del historial  {{{
set history=500 
" }}}
" No foldear al abrir un archivo con folds (comentado) {{{
" set foldlevelstart=99
" }}}
" Timeout para mappings y otros {{{
set timeoutlen=300
" }}}
" Smart case en las búsquedas{{{
set ignorecase
" Si el patrón de búsqueda contiene mayúsculas -> set noignorecase temporal
set smartcase
" }}}

" }}}
" Defino comandos útiles {{{
" save as sudo {{{
cabbrev w!! w !sudo tee "%"
" }}}
" }}}
" Mappings {{{

" Mappings relacionados a pestañas {{{

" Mover (izquierda o derecha)
map tm :tabm 

" Abrir nueva pestaña
map tt :tabnew 

" Abrir en una nueva pestaña el buffer de la ventana actual
map ts :tab split<CR>

" Vertical split
map ,s :only<CR>:vs<CR><C-l>

" Movimiento
map <C-S-Right> :tabn<CR>
imap <C-S-Right> <ESC>:tabn<CR>
map <C-S-Left> :tabp<CR>
imap <C-S-Left> <ESC>:tabp<CR>
" }}}
" Habilitar/deshabilitar resultados de búsqueda resaltados {{{
nnoremap <F4> :set hlsearch!<CR>
" }}}
" Uso C-m para incrementar en vez de C-a (lo uso para tmux) {{{
nnoremap <C-m> <C-a>
" }}}
" Invertir ^ y 0 {{{
nnoremap ^ 0
nnoremap 0 ^
" }}}
" Expandir %% a la ruta del directorio actual {{{
cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'
" }}}
" Abrir/cerrar folds con <Space> {{{
nmap <space> za
" }}}
" Mejor forma de moverse entre ventanas {{{
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
" }}}
" Algún plugin mapea la tecla enter en modo normal a C-a, quito esto {{{
unmap <CR>
" }}}
" Invertir "" y "+ {{{
" Uso bastante la función de usar el registro del clipboard ("+). Si a los
" mappings que los utilizan no se les pasa ningún registro utilizan el unnamed
" ("") por lo que es poco probable que lo utilice de forma explícita.
" También mapeo "' a "* (el registro del clipboard de X11)
nnoremap "" "+
nnoremap "+ ""
vnoremap "" "+
vnoremap "+ ""
" }}}

" Comment this line to enable autocompletion preview window
" (displays documentation related to the selected completion option)
" Disabled by default because preview makes the window flicker
" set completeopt-=preview

" mappings de plugins {{{

" ,t y F3 para nerdtree {{{
map <F3> :NERDTreeToggle<CR>
nmap ,t :NERDTreeFind<CR>
" }}}
"
" }}}

" FZF (alternativa a ctrlp) {{{
nmap ,e :GFiles<CR>
nmap ,E :Files<CR>
nmap ,b :Buffers<CR>
nmap ,m :History<CR>
nmap ,h :History:<CR>
nmap ,T :Tags<CR>
nnoremap <F5> :ALEToggle<CR>
" }}}
" }}}
" Autocmds {{{
" tab length exceptions on some file types {{{
"autocmd FileType html setlocal shiftwidth=2 tabstop=2 softtabstop=2
"autocmd FileType htmldjango setlocal shiftwidth=2 tabstop=2 softtabstop=2
"autocmd FileType javascript setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType c setlocal noexpandtab
autocmd FileType cpp setlocal noexpandtab
autocmd BufRead jrnl* setlocal textwidth=80
" }}}
" Settings locales para el vimrc {{{
augroup VimrcSettings
    autocmd!
    autocmd BufRead $MYVIMRC,vimrc setlocal foldmethod=marker
    " " Re-sourcear al guardar (no funciona muy bien)
    " autocmd BufWritePost $MYVIMRC,vimrc source $MYVIMRC
augroup END
" }}}
" Uso los .hbs como html {{{
" TODO: Buscar plugins que lo manejen
augroup EmberHBS
    autocmd!
    autocmd BufRead *.hbs set ft=html
augroup end
" }}}

" }}}
" Apariencia {{{

" Setear colorscheme. usar 256 colores cuando sea posible{{{
if &term =~? 'mlterm\|xterm\|xterm-256\|screen-256\|st-256\|dvtm-256'
	let &t_Co = 256
    set background=dark
    colorscheme solarized
else
    colorscheme delek
endif
" }}}

" Descomentar si se quiere usar un tema especial si 
" se está usando gvim
" if has('gui_running')
"     colorscheme wombat
" endif
" Custom highlight para signify {{{
highlight DiffAdd           cterm=bold ctermbg=none ctermfg=119
highlight DiffDelete        cterm=bold ctermbg=none ctermfg=167
highlight DiffChange        cterm=bold ctermbg=none ctermfg=227
highlight SignifySignAdd    cterm=bold ctermbg=237  ctermfg=119
highlight SignifySignDelete cterm=bold ctermbg=237  ctermfg=167
highlight SignifySignChange cterm=bold ctermbg=237  ctermfg=227
" }}}

" }}}
"
set nomodeline

" Make panes resize when host window is resized
" Taken from https://vi.stackexchange.com/questions/201/make-panes-resize-when-host-window-is-resized
autocmd VimResized * wincmd =
